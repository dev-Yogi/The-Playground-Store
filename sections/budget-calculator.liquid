{% assign color_scheme_id = section.settings.color_scheme %}
{% assign color_scheme = section.settings.color_scheme | prepend: 'color_schemes.' | json %}

{% if color_scheme_id != blank and color_scheme != blank %}
  {% assign settings = color_scheme.settings %}
  <style>
      .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
      padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
    }

    @media screen and (min-width: 750px) {
      .section-{{ section.id }}-padding {
        padding-top: {{ section.settings.padding_top }}px;
        padding-bottom: {{ section.settings.padding_bottom }}px;
      }
    }
     .page-width {
      max-width: var(--page-width);
      background: {{ settings.background }};
      background: {{ settings.background_gradient }};
      color: {{ settings.text }};
      box-shadow:{{ settings.shadow }};
    }
    button {
      background-color: {{ settings.button }};
      color: {{ settings.button_label }};
    }
    button.secondary {
      color: {{ settings.secondary_button_label }};
    }
    #install-alert{
      color: white;
    }
    #budget-results ul li span.result,
    #budget-results ul li
    {
      font-size: 30px !important;
      color:#6CDAEE;
    }
  </style>
{% endif %}
<div class="color-{{ section.settings.color_scheme }} gradient col container">
  <h1 class="page-title title h1{{ section.settings.heading_size }}">Playground Budget Calculator</h1>

  <div
    id="pg-budget-calc"
    class="page-width page-width--narrow section-{{ section.id }}-padding"
  >
    <label for="budget_total_before_tax">{{ section.settings.budget_total_before_tax.label }}</label>
    <input type="number" id="budget_total_before_tax" value="{{ section.settings.budget_total_before_tax.default }}">
    <button onclick="calculateBudget()">Calculate</button>
    <div id="budget-results">
      <h2 class="">How much you have for:</h2>
      <ul>
        <li id="equipment">Equipment: $<span class="result"></span></li>
        <li id="installation">Installation: $<span class="result"></span></li>
        <span id="install-alert"
          >*Installation prices vary based on travel costs. Surfacing is an estimate of wood mulch only</span
        >
        <li id="surfacing">Surfacing: $<span class="result"></span></li>
        <li id="ground-preparation">Ground Preparation: $<span class="result"></span></li>
        <li id="delivery">Delivery: $<span class="result"></span></li>
      </ul>
      <canvas id="budget-chart"></canvas>
    </div>
  </div>
</div>

<script>
  function calculateBudget() {
    var totalBudget = parseFloat(document.getElementById('budget_total_before_tax').value);
    var equipmentPercent = 0.4;
    var installationPercent = 0.2;
    var surfacingPercent = 0.15;
    var groundPreparationPercent = 0.1;
    var deliveryPercent = 0.15;

    var equipmentBudget = totalBudget * equipmentPercent;
    var installationBudget = totalBudget * installationPercent;
    var surfacingBudget = totalBudget * surfacingPercent;
    var groundPreparationBudget = totalBudget * groundPreparationPercent;
    var deliveryBudget = totalBudget * deliveryPercent;

    document.getElementById('equipment').querySelector('span').innerText = equipmentBudget.toFixed(2);
    document.getElementById('installation').querySelector('span').innerText = installationBudget.toFixed(2);
    document.getElementById('surfacing').querySelector('span').innerText = surfacingBudget.toFixed(2);
    document.getElementById('ground-preparation').querySelector('span').innerText = groundPreparationBudget.toFixed(2);
    document.getElementById('delivery').querySelector('span').innerText = deliveryBudget.toFixed(2);

    // Draw Pie Chart
    var ctx = document.getElementById('budget-chart').getContext('2d');
    var budgetChart = new Chart(ctx, {
      type: 'pie',
      data: {
        labels: ['Equipment', 'Installation', 'Surfacing', 'Ground Preparation', 'Delivery'],
        datasets: [
          {
            label: 'Budget Allocation',
            data: [equipmentBudget, installationBudget, surfacingBudget, groundPreparationBudget, deliveryBudget],
            backgroundColor: [
              'rgba(255, 99, 132, 0.7)',
              'rgba(54, 162, 235, 0.7)',
              'rgba(255, 206, 86, 0.7)',
              'rgba(75, 192, 192, 0.7)',
              'rgba(153, 102, 255, 0.7)',
            ],
          },
        ],
      },
      options: {
        responsive: true,
      },
    });
  }
</script>

{% schema %}
{
  "name": "Budget Calculator",
  "tag": "section",
  "class": "budget-calculator",
  "settings": [
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    }
  ],
  "presets": [
    {
      "name": "Budget Calculator",
      "category": "finance"
    }
  ]
}
{% endschema %}
